{
  "name": "bracket-lynx",
  "displayName": "Bracket Lynx",
  "description": "Available now: VSCode ‚Ä¢ Cursor ‚Ä¢ Windsurf ‚Ä¢ Trae.ai ‚Ä¢ Kiro & (Firebase Studio)...",
  "version": "0.5.0",
  "publisher": "bastndev",
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "bracket",
    "highlight",
    "productivity",
    "developer tools",
    "lens",
    "code",
    "2025"
  ],
  "icon": "assets/icon.png",
  "galleryBanner": {
    "color": "#0a0a0a",
    "theme": "dark"
  },
  "homepage": "https://github.com/bastndev/Bracket-Lynx#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/bastndev/Bracket-Lynx"
  },
  "bugs": {
    "url": "https://github.com/bastndev/Bracket-Lynx/issues"
  },
  "author": {
    "name": "Gohit Bastian",
    "email": "gobasdev@gmail.com",
    "url": "https://www.bastndev.com"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/bastndev"
  },
  "main": "./dist/extension.js",
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript", 
    "onLanguage:javascriptreact",
    "onLanguage:typescriptreact",
    "onLanguage:css",
    "onLanguage:scss",
    "onLanguage:sass", 
    "onLanguage:less",
    "onLanguage:html",
    "onLanguage:astro",
    "onLanguage:vue",
    "onLanguage:svelte",
    "onLanguage:json",
    "onLanguage:jsonc"
  ],
  "contributes": {
    "commands": [
      {
        "command": "bracketLynx.menu",
        "title": "Bracket Lynx: Toggle & Refresh üõ†Ô∏è"
      }
    ],
    "configuration": {
      "title": "Bracket Lynx",
      "properties": {
        "bracketLynx.color": {
          "type": "string",
          "default": "#515151",
          "description": "Color used for bracket decorations (hex format)",
          "pattern": "^#[0-9a-fA-F]{6}$",
          "patternErrorMessage": "Please enter a valid hex color (e.g., #ff6b6b)"
        },
        "bracketLynx.mode": {
          "type": "string",
          "enum": [
            "auto",
            "manual"
          ],
          "default": "auto",
          "description": "Mode for bracket highlighting"
        },
        "bracketLynx.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging"
        },
        "bracketLynx.fontStyle": {
          "type": "string",
          "enum": [
            "normal",
            "italic",
            "bold"
          ],
          "default": "italic",
          "description": "Font style for bracket decorations"
        },
        "bracketLynx.prefix": {
          "type": "string",
          "default": "‚Äπ~ ",
          "description": "Prefix shown before bracket headers"
        },
        "bracketLynx.unmatchBracketsPrefix": {
          "type": "string",
          "default": "‚ùå ",
          "description": "Prefix shown for unmatched brackets"
        },
        "bracketLynx.maxBracketHeaderLength": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "Maximum length of bracket header text"
        },
        "bracketLynx.minBracketScopeLines": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 50,
          "description": "Minimum number of lines for bracket scope to show decoration"
        },
        "bracketLynx.enablePerformanceFilters": {
          "type": "boolean",
          "default": true,
          "description": "Enable performance filters for large files"
        },
        "bracketLynx.maxFileSize": {
          "type": "number",
          "default": 10485760,
          "description": "Maximum file size in bytes (default: 10MB)"
        },
        "bracketLynx.maxDecorationsPerFile": {
          "type": "number",
          "default": 500,
          "minimum": 50,
          "maximum": 2000,
          "description": "Maximum number of decorations per file"
        }
      }
    }
  },
  "scripts": {
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "node ./node_modules/mocha/bin/mocha -r ts-node/register src/__test__/**/*.test.ts",
    "watch-tests": "npm run test -- --watch"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.43.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "esbuild": "^0.25.0",
    "eslint": "^9.21.0",
    "mocha": "^11.3.0",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3"
  }
}
